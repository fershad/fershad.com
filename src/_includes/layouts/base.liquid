<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% include "partials/metadata" %}
    <link rel="stylesheet" href="/css/index.css">
    <link rel="stylesheet" href="/css/font.css">
    {% if css %}
      <link rel="stylesheet" href="/css/{{ css }}">
    {% endif %}
    <link
      rel="stylesheet"
      href="/css/glitch.css"
      data-gaw-remove>


    <link rel="shortcut icon" href="/favicon.ico" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-touch-icon.png">
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon-32x32.png">
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon-16x16.png">

    <link
      data-gaw-remove
      rel="icon"
      id="favicon-emoji"
      href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>📷</text></svg>">
  </head>

  <body>
    {% include 'partials/header.liquid' %}
    <div class="gaw-banner center-align controls" data-gaw-remove>
      <small class="">
        <label for="glitch-toggle" class="form-control">
          <input
            type="checkbox"
            name="glitch-toggle"
            id="glitch-toggle"
            value="glitchSwitch" />
          <span>Deglitch</span>
        </label>
        <label for="font-toggle" class="form-control">
          <input
            type="checkbox"
            name="font-toggle"
            id="font-toggle"
            value="fontSwitch" />
          <span>Depixelate</span>
        </label>
        <label for="theme-toggle" class="form-control">
          <input
            type="checkbox"
            name="theme-toggle"
            id="theme-toggle"
            value="themeSwitch" />
          <span>Switch theme</span>
        </label>
      </small>
    </div>
    <div class="gaw-banner center-align">
      <small>This website is grid-aware, some functionality has changed.
        <a href="/grid-aware">Find out more</a>. View the
        <a href="#" id="gaw-reject">regular website</a>.</small>
    </div>
    <a class="skip-link banner" href="#main-content">Skip to content</a>
    <main id="main-content">{{ content }}</main>
    {% include 'partials/footer.liquid' %}
  </body>

  <script data-gaw-remove>
    // Go through an array of emojis and set the favicon-emoji to a random one. The code should loop through the array, like a slot machine before settling on one.
    const emojiArray = ['🚴‍♂️', '🏉', '🇹🇼', '🇦🇺', '💚', '👨🏽‍💻', '🐱', '/apple-touch-icon.png']

    const faviconEmoji = document.getElementById('favicon-emoji')
    const loopCount = 10

    
    for (let i = 0; i < loopCount; i++) {
      setTimeout(() => {
        let emoji = emojiArray[Math.floor(Math.random() * emojiArray.length)]
        if (emoji === '/apple-touch-icon.png') {
          faviconEmoji.setAttribute('href', '/apple-touch-icon.png')
        } else {
          faviconEmoji.setAttribute('href', `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${emoji}</text></svg>`)
        }
      }, i * 100)
    }

    // Check local storage for glitch and font settings
    const glitchToggle = document.getElementById('glitch-toggle')
    const fontToggle = document.getElementById('font-toggle')
    const glitchStyles = document.querySelector('link[href="/css/glitch.css"]')
    const fontStyles = document.querySelector('link[href="/css/font.css"]')

    if (localStorage.getItem('glitch') === 'true') {
      glitchToggle.checked = true
      glitchStyles.remove()
    }

    if (localStorage.getItem('font') === 'true') {
      fontToggle.checked = true
      fontStyles.remove()
    }


    // Glitch toggle
    const glitchToggleText = document.querySelector('label[for="glitch-toggle"] span')

    glitchToggle.addEventListener('change', () => {
      if (glitchToggle.checked) {
        glitchStyles.remove()
        glitchToggleText.textContent = 'Glitch'
        document.body.classList.add('deglitch')
        localStorage.setItem('glitch', 'true')
      } else {
        document.head.appendChild(glitchStyles)
        glitchToggleText.textContent = 'Deglitch'
        document.body.classList.remove('deglitch')
        localStorage.setItem('glitch', 'false')
      }
    })

    // Font toggle
    const fontToggleText = document.querySelector('label[for="font-toggle"] span')

    fontToggle.addEventListener('change', () => {
      if (fontToggle.checked) {
        fontToggleText.textContent = 'Pixelate'
        fontStyles.remove()
        localStorage.setItem('font', 'true')
      } else {
        fontToggleText.textContent = 'Depixelate'
        document.head.appendChild(fontStyles)
        localStorage.setItem('font', 'false')
      }
    })

    // Theme toggle
    const themeToggle = document.getElementById('theme-toggle')

    // Check local storage for theme settings
    if (localStorage.getItem('theme') === 'dark') {
      document.body.classList.add('dark')
      themeToggle.checked = true
    }

    themeToggle.addEventListener('change', () => {
      if (themeToggle.checked) {
        document.body.classList.add('dark')
        localStorage.setItem('theme', 'dark')
      } else {
        document.body.classList.remove('dark')
        localStorage.setItem('theme', 'light')
      }
    })
  </script>

  <script
    src="https://cdn.usefathom.com/script.js"
    data-site="FCHIIDAN"
    data-honor-dnt="true"
    defer></script>

  <script>
    const gawScript = document.querySelector('script[data-gaw-remove]');

    // Send an event to analytics tracking how many grid-aware view there are
    if (!gawScript && fathom) {
    	fathom.trackEvent('gaw views')
    }

      const gawReject = document.getElementById('gaw-reject');
      
      gawReject.addEventListener('click', (event) => {
          event.preventDefault();
          if (fathom) {
              fathom.trackGoal('gaw reject', 0);
          }
          // Save the user's preference as a cookie for 24 hours
          document.cookie = 'gaw-status=disable;max-age=86400;path=/;';
          window.location.reload();
      });
  </script>
</html>