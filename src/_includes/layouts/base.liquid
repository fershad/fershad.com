<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% include "partials/metadata" %}
    <link rel="stylesheet" href="{{  "/css/index.css" | versionHashCSS }}">
    <link
      rel="stylesheet"
      href="{{"/css/font.css"  | versionHashCSS }}"
      data-gaw-remove>
    {% if css %}
      <link rel="stylesheet" href="{{ css | versionHashCSS }}">
    {% endif %}
    <link
      rel="stylesheet"
      href="{{"/css/glitch.css"  | versionHashCSS }}"
      data-gaw-remove>

    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/apple-touch-icon.png">
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon-32x32.png">
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon-16x16.png">

    <link
      data-gaw-remove
      rel="icon"
      id="favicon-emoji"
      href="/apple-touch-icon.png'">


    <script id="rando-favicon" data-gaw-remove>
        // Go through an array of emojis and set the favicon-emoji to a random one. The code should loop through the array, like a slot machine before settling on one.
          const emojiArray = ['🚴‍♂️', '🏉', '🇹🇼', '🇦🇺', '💚', '👨🏽‍💻', '🐱', '📷', '/apple-touch-icon.png']

          const faviconEmoji = document.getElementById('favicon-emoji')
          const loopCount = 10

          
          const loopFavicon = () => {
      for (let i = 0; i < loopCount; i++) {
        setTimeout(() => {
          let emoji = emojiArray[Math.floor(Math.random() * emojiArray.length)]
          if (emoji === '/apple-touch-icon.png') {
            faviconEmoji.setAttribute('href', '/apple-touch-icon.png')
          } else {
            faviconEmoji.setAttribute('href', `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${emoji}</text></svg>`)
          }
        }, i * 100)
      }
          }

          if (localStorage.getItem('favicon') !== 'true') {
        loopFavicon()
      }
    </script>
  </head>


  <body>
    {% include 'partials/header.liquid' %}
    <div class="gaw-banner center-align controls" data-gaw-remove>
      <small class="">
        <label for="glitch-toggle" class="form-control">
          <input
            type="checkbox"
            name="glitch-toggle"
            id="glitch-toggle"
            value="glitchSwitch"
            checked />
          <span>Glitch</span>
        </label>
        <label for="font-toggle" class="form-control">
          <input
            type="checkbox"
            name="font-toggle"
            id="font-toggle"
            value="fontSwitch"
            checked />
          <span>Pixelate</span>
        </label>
        <label for="favicon-toggle" class="form-control">
          <input
            type="checkbox"
            name="favicon-toggle"
            id="favicon-toggle"
            value="faviconSwitch" />
          <span>Static icon</span>
        </label>
        <label for="theme-toggle" class="form-control">
          <input
            type="checkbox"
            name="theme-toggle"
            id="theme-toggle"
            value="themeSwitch" />
          <span>Dark theme</span>
        </label>
      </small>
    </div>

    <!-- Blocking JS to prevent content flashing -->
    <script data-gaw-remove>
        // Check local storage for glitch and font settings
        const glitchToggle = document.getElementById('glitch-toggle')
        const fontToggle = document.getElementById('font-toggle')
        const glitchStyles = document.querySelector('link[href^="/css/glitch.css"]')
        const fontStyles = document.querySelector('link[href^="/css/font.css"]')
        const faviconToggle = document.getElementById('favicon-toggle')
        const faviconScript = document.getElementById('rando-favicon')
          
        if (localStorage.getItem('glitch') === 'true') {
          glitchToggle.checked = false
          document.body.classList.add('deglitch')
          glitchStyles.remove()
        }
          
        if (localStorage.getItem('font') === 'true') {
          fontToggle.checked = false
          fontStyles.remove()
        }
          
        if (localStorage.getItem('favicon') === 'true') {
          faviconToggle.checked = true
        }
          
          
        // Glitch toggle
        
          
        glitchToggle.addEventListener('change', () => {
          if (glitchToggle.checked) {
            document.head.appendChild(glitchStyles)
            document.body.classList.remove('deglitch')
            localStorage.setItem('glitch', 'false')
          } else {
            glitchStyles.remove()
            document.body.classList.add('deglitch')
            localStorage.setItem('glitch', 'true')
          }
        })
          
        // Font toggle
        
          
        fontToggle.addEventListener('change', () => {
          if (fontToggle.checked) {
            document.head.appendChild(fontStyles)
            localStorage.setItem('font', 'false')
          } else {
            fontStyles.remove()
            localStorage.setItem('font', 'true')
          }
        })
          
        // Favicon toggle
        faviconToggle.addEventListener('change', () => {
          if (faviconToggle.checked) {
            faviconScript.remove()
            localStorage.setItem('favicon', 'true')
          } else {
            document.body.appendChild(faviconScript)
            localStorage.setItem('favicon', 'false')
            loopFavicon()
          }
        })
          
        // Theme toggle
        const themeToggle = document.getElementById('theme-toggle')
          
        // Check local storage for theme settings
        if (localStorage.getItem('theme') === 'dark') {
          document.body.classList.add('dark')
          themeToggle.checked = true
        }
          
        themeToggle.addEventListener('change', (event) => {
          if (document.body.classList.contains('dark')) {
            document.body.classList.remove('dark')
            localStorage.setItem('theme', 'light')
            themeToggle.checked = false
          } else {
            document.body.classList.add('dark')
            localStorage.setItem('theme', 'dark')
            themeToggle.checked = true
          }
        })
    </script>

    <div class="gaw-banner center-align">
      <small>This website is grid-aware, some functionality has changed.
        <a href="/grid-aware">Find out more</a>. View the
        <a href="#" id="gaw-reject">regular website</a>.</small>
    </div>
    <a class="skip-link banner" href="#main-content">Skip to content</a>
    <main id="main-content">{{ content }}</main>
    {% include 'partials/footer.liquid' %}
  </body>

  <script
    src="https://cdn.usefathom.com/script.js"
    data-site="FCHIIDAN"
    data-honor-dnt="true"
    defer></script>

  <script defer>
    const gawScript = document.querySelector('script[data-gaw-remove]');

    // Send an event to analytics tracking how many grid-aware view there are
    if (!gawScript) {
      window.addEventListener('load', (event) => {
        if (window && fathom) {
          fathom.trackGoal('gaw views', 0);
        }
      });
    }

      const gawReject = document.getElementById('gaw-reject');
      
      gawReject.addEventListener('click', (event) => {
        event.preventDefault();
          if (window && fathom) {
              fathom.trackGoal('gaw reject', 0);
          }
          // Save the user's preference as a cookie for 24 hours
          document.cookie = 'gaw-status=disable;max-age=86400;path=/;';
          window.location.reload();
      });
  </script>
</html>